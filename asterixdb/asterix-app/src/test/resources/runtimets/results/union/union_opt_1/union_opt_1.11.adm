distribute result [$$t]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    limit 4
    -- STREAM_LIMIT  |UNPARTITIONED|
      exchange
      -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
        union ($$161, $$188, $$t)
        -- UNION_ALL  |PARTITIONED|
          exchange
          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
            union ($$223, $$237, $$161)
            -- UNION_ALL  |PARTITIONED|
              exchange
              -- RANDOM_PARTITION_EXCHANGE  |PARTITIONED|
                project ([$$223])
                -- STREAM_PROJECT  |PARTITIONED|
                  assign [$$223] <- [{"two": $$193}]
                  -- ASSIGN  |PARTITIONED|
                    limit 4
                    -- STREAM_LIMIT  |PARTITIONED|
                      project ([$$193])
                      -- STREAM_PROJECT  |PARTITIONED|
                        assign [$$193] <- [$$onek1.getField(2)]
                        -- ASSIGN  |PARTITIONED|
                          project ([$$onek1])
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              data-scan []<-[$$197, $$onek1] <- test.onek1 condition (and(ge($$onek1.getField(2), 1), le($$onek1.getField(2), 10))) limit 4
                              -- DATASOURCE_SCAN  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  empty-tuple-source
                                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
              exchange
              -- RANDOM_PARTITION_EXCHANGE  |PARTITIONED|
                project ([$$237])
                -- STREAM_PROJECT  |PARTITIONED|
                  assign [$$237] <- [{"two": $$194}]
                  -- ASSIGN  |PARTITIONED|
                    limit 4
                    -- STREAM_LIMIT  |PARTITIONED|
                      project ([$$194])
                      -- STREAM_PROJECT  |PARTITIONED|
                        assign [$$194] <- [$$onek2.getField(2)]
                        -- ASSIGN  |PARTITIONED|
                          project ([$$onek2])
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              data-scan []<-[$$198, $$onek2] <- test.onek2 condition (and(ge($$onek2.getField(2), 1), le($$onek2.getField(2), 100))) limit 4
                              -- DATASOURCE_SCAN  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  empty-tuple-source
                                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
          exchange
          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
            union ($$355, $$364, $$188)
            -- UNION_ALL  |PARTITIONED|
              exchange
              -- RANDOM_PARTITION_EXCHANGE  |PARTITIONED|
                project ([$$355])
                -- STREAM_PROJECT  |PARTITIONED|
                  assign [$$355] <- [{"two": $$195}]
                  -- ASSIGN  |PARTITIONED|
                    limit 4
                    -- STREAM_LIMIT  |PARTITIONED|
                      project ([$$195])
                      -- STREAM_PROJECT  |PARTITIONED|
                        assign [$$195] <- [$$onek1.getField(2)]
                        -- ASSIGN  |PARTITIONED|
                          project ([$$onek1])
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              data-scan []<-[$$199, $$onek1] <- test.onek1 condition (and(ge($$onek1.getField(2), 1), le($$onek1.getField(2), 1000))) limit 4
                              -- DATASOURCE_SCAN  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  empty-tuple-source
                                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
              exchange
              -- RANDOM_PARTITION_EXCHANGE  |PARTITIONED|
                project ([$$364])
                -- STREAM_PROJECT  |PARTITIONED|
                  assign [$$364] <- [{"two": $$196}]
                  -- ASSIGN  |PARTITIONED|
                    limit 4
                    -- STREAM_LIMIT  |PARTITIONED|
                      project ([$$196])
                      -- STREAM_PROJECT  |PARTITIONED|
                        assign [$$196] <- [$$onek2.getField(2)]
                        -- ASSIGN  |PARTITIONED|
                          project ([$$onek2])
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              data-scan []<-[$$200, $$onek2] <- test.onek2 condition (and(ge($$onek2.getField(2), 1), le($$onek2.getField(2), 10000))) limit 4
                              -- DATASOURCE_SCAN  |PARTITIONED|
                                exchange
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  empty-tuple-source
                                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
