distribute result [$$101]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    limit 10
    -- STREAM_LIMIT  |UNPARTITIONED|
      project ([$$101])
      -- STREAM_PROJECT  |PARTITIONED|
        assign [$$101] <- [{"uname": $$uname, "cnt": $$103}]
        -- ASSIGN  |PARTITIONED|
          exchange
          -- SORT_MERGE_EXCHANGE [$$103(DESC) ]  |PARTITIONED|
            limit 10
            -- STREAM_LIMIT  |PARTITIONED|
              exchange
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                order (topK: 10) (DESC, $$103)
                -- STABLE_SORT [topK: 10] [$$103(DESC)]  |PARTITIONED|
                  exchange
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    group by ([$$uname := $$114]) decor ([]) {
                              aggregate [$$103] <- [agg-sql-sum($$113)]
                              -- AGGREGATE  |LOCAL|
                                nested tuple source
                                -- NESTED_TUPLE_SOURCE  |LOCAL|
                           }
                    -- SORT_GROUP_BY[$$114]  |PARTITIONED|
                      exchange
                      -- HASH_PARTITION_EXCHANGE [$$114]  |PARTITIONED|
                        group by ([$$114 := $$102]) decor ([]) {
                                  aggregate [$$113] <- [agg-sql-count(1)]
                                  -- AGGREGATE  |LOCAL|
                                    nested tuple source
                                    -- NESTED_TUPLE_SOURCE  |LOCAL|
                               }
                        -- SORT_GROUP_BY[$$102]  |PARTITIONED|
                          exchange
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            project ([$$102])
                            -- STREAM_PROJECT  |PARTITIONED|
                              select ($$92)
                              -- STREAM_SELECT  |PARTITIONED|
                                project ([$$92, $$102])
                                -- STREAM_PROJECT  |PARTITIONED|
                                  exchange
                                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                    group by ([$$112 := $$110]) decor ([$$102]) {
                                              aggregate [$$92] <- [non-empty-stream()]
                                              -- AGGREGATE  |LOCAL|
                                                select (not(is-missing($$111)))
                                                -- STREAM_SELECT  |LOCAL|
                                                  nested tuple source
                                                  -- NESTED_TUPLE_SOURCE  |LOCAL|
                                           }
                                    -- PRE_CLUSTERED_GROUP_BY[$$110]  |PARTITIONED|
                                      exchange
                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                        order (ASC, $$110)
                                        -- STABLE_SORT [$$110(ASC)]  |PARTITIONED|
                                          exchange
                                          -- HASH_PARTITION_EXCHANGE [$$110]  |PARTITIONED|
                                            project ([$$102, $$111, $$110])
                                            -- STREAM_PROJECT  |PARTITIONED|
                                              exchange
                                              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                left outer join (eq($$104, $$88))
                                                -- HYBRID_HASH_JOIN [$$104][$$88]  |PARTITIONED|
                                                  exchange
                                                  -- HASH_PARTITION_EXCHANGE [$$104]  |PARTITIONED|
                                                    running-aggregate [$$110] <- [create-query-uid()]
                                                    -- RUNNING_AGGREGATE  |PARTITIONED|
                                                      project ([$$102, $$104])
                                                      -- STREAM_PROJECT  |PARTITIONED|
                                                        assign [$$104] <- [$$ht1.getField("text")]
                                                        -- ASSIGN  |PARTITIONED|
                                                          project ([$$102, $$ht1])
                                                          -- STREAM_PROJECT  |PARTITIONED|
                                                            unnest $$ht1 <- scan-collection($$105)
                                                            -- UNNEST  |PARTITIONED|
                                                              project ([$$105, $$102])
                                                              -- STREAM_PROJECT  |PARTITIONED|
                                                                assign [$$105, $$102] <- [$$p1.getField("entities").getField("hashtags"), $$p1.getField("user").getField("name")]
                                                                -- ASSIGN  |PARTITIONED|
                                                                  exchange
                                                                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                                    data-scan []<-[$$p1] <- test.ParquetDataset1 project ({entities:{hashtags:[{text:any}]},user:{name:any}})
                                                                    -- DATASOURCE_SCAN  |PARTITIONED|
                                                                      exchange
                                                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                                        empty-tuple-source
                                                                        -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                                                  exchange
                                                  -- HASH_PARTITION_EXCHANGE [$$88]  |PARTITIONED|
                                                    project ([$$111, $$88])
                                                    -- STREAM_PROJECT  |PARTITIONED|
                                                      assign [$$111, $$88] <- [true, $$ht2.getField("text")]
                                                      -- ASSIGN  |PARTITIONED|
                                                        project ([$$ht2])
                                                        -- STREAM_PROJECT  |PARTITIONED|
                                                          unnest $$ht2 <- scan-collection($$106)
                                                          -- UNNEST  |PARTITIONED|
                                                            project ([$$106])
                                                            -- STREAM_PROJECT  |PARTITIONED|
                                                              assign [$$106] <- [$$p2.getField("entities").getField("hashtags")]
                                                              -- ASSIGN  |PARTITIONED|
                                                                exchange
                                                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                                  data-scan []<-[$$p2] <- test.ParquetDataset2 project ({entities:{hashtags:[{text:any}]}})
                                                                  -- DATASOURCE_SCAN  |PARTITIONED|
                                                                    exchange
                                                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                                      empty-tuple-source
                                                                      -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
